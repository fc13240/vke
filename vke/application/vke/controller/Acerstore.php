<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/10/27 0027
 * Time: 09:13
 */
namespace app\vke\controller;
use app\vke\model\ProductAcer;
use app\vke\validate\User;
use app\vke\model\Member;
use app\vke\controller\Common;
use app\vke\controller\Pay;
class Acerstore extends Common
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //调用验证登录方法
        $this->checkLogin();
    }

    //积分商城商品列表
    public function acerList()
    {
        //根据用户id查询当前剩余元宝
        $userAcer = model('Member')->getUserInfo($this->user_id,'member_acer')['member_acer'];
        $acerGoodsList = model('ProductAcer')->getAcerGoodsList();

        $result = [
            'data' => [
                'acer_list' => $acerGoodsList
            ]
        ];
        return resultArray($result);
    }

    /**
     * 兑换详情页
     * 传入商品id
     */
    public function exchangeInfo(){
        $product_id = input('product_id');
        if(empty($product_id)){
            return resultArray([
                'error' => '请确认兑换商品'
            ]);
        }

        //查询商品详情
        $fields = 'product_id,product_name,market_price,small_images,exchange_acer,stock,exchange_brief,content,product_image,product_type';
        $productInfo = model('ProductAcer')->getProductAcerInfo($product_id,$fields);
        if(empty($productInfo)){
            return resultArray(['error'=>'商品已下架或信息不存在']);
        }
        //商品详情图
        $small_images = explode(',',$productInfo['small_images']);
        foreach($small_images as $value){
             $images[] = [
                'image' => $value
            ];
        }
        $productInfo['small_images'] = $images;
        $result = [
            'data' => [
                'product_info' => $productInfo
            ]
        ];
        return resultArray($result);
    }

    /**
     * 兑换详情页的默认地址
     */
    public function exchangeInfoAddress()
    {
        $user_id = $this->user_id;
        //查询用户默认地址
        $default_address = model('Address')->getDefaultAddress($user_id);
        $result = [
            'data' => [
                'default_address' => $default_address
            ]
        ];

        return resultArray($result);
    }


    //兑换积分商品 兑换的产品id、兑换数量、手机号、支付宝账号
    public function exchangeProduct()
    {
        //验证用户登录状态
        $this->checkLogin();
        $user_id = $this->user_id;
        $number = input('number');
        $productId = input('product_id');
        $telephone = input('telephone');
//        //*****测试数据*****
//        $number = 1;
//        $productId = 1;
//        $telephone = '15846624454';
//        //*****测试数据end*****
        $data = [
            'number' => $number,
            'product_id' => $productId,
            'telephone' => $telephone,
        ];

        $validate = new User;
        $result   = $validate->scene('acer')->check($data);
        if(!$result){
            resultArray(['error'=>$validate->getError()]);
        }

        //根据商品id查询该商品的类型
        $acerProductType = ProductAcer::get($data['product_id']);
        $product_type = $acerProductType->product_type;
        //该产品库存
        $product_stock = $acerProductType->stock;
        if($product_stock < $data['number']){
            resultArray(['error'=>'该商品库存不足']);
        }

        //获得价格
        $one_price = $acerProductType->exchange_acer;
        $total_price = $one_price * $data['number'];

        //判断会员元宝数量是否足够
        $member_model = Member::get($this->user_id);
        $member_acer = $member_model->member_acer;
        if($member_acer < $total_price){
            return resultArray(['error'=>'会员元宝不足']);
        }

        //生成订单
        $payModel = new Pay;
        $makeOrder = $payModel->makeOrder($user_id,$data['product_id'],$data['number'],$one_price,$total_price,$product_type);

        if($makeOrder){
            $result = $payModel->acerPay($makeOrder,$total_price);
            return resultArray($result);
        }else{
            resultArray(['error'=>'兑换失败']);
        };

    }
}