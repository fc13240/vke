<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/11/13
 * Time: 17:40
 */

namespace app\admin\controller;
use app\common\controller\Base;
use think\Request;

class Acerstore extends Base
{
    protected $request;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->request = Request::instance();
    }

    /**
     * 元宝商城管理-商品列表 - 20171113
     */
    public function acerList()
    {
        $request = $this->request;
        //接收奖品类型
        $product_type = $request->post('product_type');
        //$type = $request->post('type');
        //接收上架状态
        $is_sale = $request->post('is_sale');
        $map = [];
        if(!empty($product_type)){
            $map['product_type'] = $product_type;
        }


        /*if(!empty($type)){
            $map['type'] = $type;
        }*/
        if(!empty($is_sale)){
            $map['is_sale'] = $is_sale;
        }

        //查询积分商城商品
        $acerList = model('ProductAcer')->getProductAcer($map);
        $result = [
            'data' => [
                'acer_list' => $acerList,
            ]
        ];
        return resultArray($result);
    }

    /**
     * 上下架/一键上下架 - 20171114
     */
    public function changeSale()
    {
        $request = $this->request;
        //接受元宝商品id
        $goods_id = Request::instance() -> post('product_id/a');

        //接受上下架
        $is_sale = $request -> post('is_sale');
        $data = [
            'product_id' => $goods_id,
            'is_sale' => $is_sale
        ];
        auto_validate('AcerStore',$data,'is_sale');
        $map['product_id'] = ['in',$goods_id];
        //执行修改
        $result_edit = model('ProductAcer')->where($map)->update($data);
        if($result_edit !== false){
            $result = [
                'data' => [
                    'message' => '操作成功'
                ]
            ];
        }else{
            $result = [
                'error' => '操作失败'
            ];
        }
        return resultArray($result);
    }

    /**
     * 添加元宝商品 - 20171114
     */
    public function addProductAcer()
    {
        $request = $this->request;
        //接收添加的数据
        $post = $request->post();
        auto_validate('AcerStore',$post,'add');

        if($post['goods_type'] == 1){
            $post['product_type'] = 1;
            $post['type'] = 1;
        }
        elseif($post['goods_type'] == 2){
            $post['product_type'] = 1;
            $post['type'] = 2;
        }
        elseif($post['goods_type'] == 3){
            $post['product_type'] = 2;
            $post['type'] = 0;
        }
        unset($post['goods_type']);
        $post['small_images'] = trim(implode(',',$post['small_images']),',');

        //执行添加
        $post['add_time'] = date('Y-m-d H:i:s',time());
        $result_id = model('ProductAcer')->addData($post);
        if($result_id){
            $result = [
                'data' => [
                    'message' => '添加成功'
                ]
            ];
        }else{
            $result = [
                'error' => '添加失败'
            ];
        }
        return resultArray($result);
    }

    /**
     * 编辑元宝商城商品 - 20171115
     */
    public function editProductAcer()
    {
        if(Request::instance()->isGet()){
            //接收产品id
            $product_id = Request::instance()->get('product_id');
            auto_validate('AcerStore',['product_id'=>$product_id],'edit');
            //查询该产品信息
            $map['product_id'] = $product_id;
            $fields = 'product_id,product_name,product_type,type,product_image,small_images,market_price,stock,exchange_acer,content';
            $productInfo = model('ProductAcer')->getProductInfo($map,$fields);
            $result = [
                'data' => [
                    'product' => $productInfo
                ]
            ];
        }
        elseif(Request::instance()->isPost()) {
            //接收修改的元宝数据
            $product_info = Request::instance()->post();
            if(empty($product_info['product_id'])){
                $this->addProductAcer();
            }
            if(empty($product_info)){
                return resultArray(['error'=>'请输入商品信息']);
            }

            if($product_info['goods_type'] == 1){
                $product_info['product_type'] = 1;
                $product_info['type'] = 1;
            }
            elseif($product_info['goods_type'] == 2){
                $product_info['product_type'] = 1;
                $product_info['type'] = 2;
            }
            elseif($product_info['goods_type'] == 3){
                $product_info['product_type'] = 2;
                $product_info['type'] = 0;
            }
            unset($product_info['goods_type']);

            //修改小图格式
            $product_info['small_images'] = implode(',',$product_info['small_images']);
            //执行修改
            $map['product_id'] = $product_info['product_id'];
            $result_edit = model('ProductAcer')->editData($map,$product_info);
            if($result_edit !== false){
                $result = [
                    'data' => [
                        'message' => '修改成功'
                    ]
                ];
            }else{
                $result = [
                    'error' => '修改失败'
                ];
            }

        }
        return resultArray($result);

    }

    /**
     * 管理-元宝商城管理-兑换说明 - 20171116
     */
    public function exchangeBrief()
    {
        if(Request::instance()->isGet()){ //查询兑换说明
            $exchang_brief = db('acer_config')->where('id',1)->value('exchange_brief');
            $result = [
                'data' => [
                    'brief' => $exchang_brief
                ]
            ];
            return resultArray($result);
        }
        elseif(Request::instance()->isPost()){
            //接收修改的兑换时活命
            $brief = Request::instance()->post('brief');
            if(empty($brief)){
                return resultArray(['error'=>'请输入兑换说明']);
            }
            //执行修改
            $result_edit = db('acer_config')->where(['id'=>1])->update(['exchange_brief'=>$brief]);
            if($result_edit !== false){
                $result = [
                    'data' => [
                        'message' => '修改成功'
                    ]
                ];
            }else{
                $result = [
                    'error' => '修改失败'
                ];
            }
            return resultArray($result);
        }
    }
}