<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/11/7
 * Time: 11:06
 */

namespace app\vke\controller;
use app\vke\controller\Common;
use think\Request;

class Search extends Common
{
    protected $sort_now;
    protected $sorts_type;
    protected $sorts = "ASC";

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->checkLogin();
    }

    /**
     * 搜索页面-搜索历史
     */
    public function searchPage()
    {
        $user_id = $this->user_id;
        //根据用户id查询搜索历史
        $searchHistory = model('SearchHistory')->getSearchHistory($user_id);



        $result = [
            'data' => [
                'history' => $searchHistory,
            ]
        ];

        return resultArray($result);
    }

    /**
     * 清空搜索历史 - 20171116
     */
    public function delSearch()
    {
        $user_id = $this->user_id;
        $map['member_id'] = $user_id;
        $result_del = model('SearchHistory')->where($map)->delete();
        if($result_del){
            $result = [
                'data' => [
                    'message' => '操作成功'
                ]
            ];
        }else{
            $result = [
                'error' => '操作失败'
            ];
        }
        return resultArray($result);
    }

    /**
     * 搜索页面-默认搜索项
     */
    public function searchDefault()
    {
        //默认搜索词
        $defaultWords = model('SearchKeywords')->getDefaultWords();
        $rand = mt_rand(0, $defaultWords['count'] - 1);
        $result = [
            'data' => [
                'default' => $defaultWords['words'][$rand]
            ]
        ];
        return resultArray($result);
    }


    /**
     * 搜索页面-热门推荐
     */
    public function searchPageHot()
    {
        //查询热门推荐搜索
        $hotSearch = model('SearchHistory')->getHotSearch();
        $result = [
            'data' => [
                'hot' => $hotSearch
            ]
        ];
        return resultArray($result);
    }

    /**
     * 搜索页面-排序方式 - 20171116
     */

    public function searchSort()
    {
        $sorts_type = db('sort')
            ->where(['type_id'=>3,'status'=>1])
            ->order('sorts','desc')
            ->field('id,sort_name')
            ->select();
        $result = [
            'data' => [
                'sorts_type' => $sorts_type
            ]
        ];
        return resultArray($result);
    }

    /**
     * 搜索排序方式
     */
    public function sorts($type)
    {
        //查询排序类型
        $sorts_type = db('sort')
            ->where(['type_id'=>$type,'status'=>1])
            ->order('sorts','desc')
            ->field('id,sort_name')
            ->select();
        //查询排序字段
        $this->sorts_type = db('sort')
            ->where(['type_id'=>$type,'status'=>1])
            ->order('sorts','desc')
            ->column('id,field');

        //接收排序类型
        $sort = input('sort');
        if(empty($sort)){
            $sort = $sorts_type[0]['id'];
        }

        $sort_type = $this->sorts_type;
        return [
            'sorts' => $sort,
            'sort_type' => $sort_type
        ];
    }

    /**
     * 执行搜索
     */
    public function doSearch()
    {
        $sorts_arr = $this->sorts(3);
        $sort_type = $sorts_arr['sort_type'];

        $sort = $sorts_arr['sorts'];
        $user_id = $this->user_id;
        //接收搜索关键词

        $keywords = Request::instance()->post('keywords');
        $keywords = trim($keywords);
        $keywords = strip_tags($keywords);
        if(empty($keywords)){
            return resultArray(['error'=>'请输入搜索内容']);
        }
        //将搜索内容存入数据库,根据会员id和搜索内容查询该用户是否已经有过搜索
        $search_result = db('search_history')->where(['member_id'=>$user_id,'keywords'=>$keywords])->value('id');
        $model = model('SearchHistory');

            $data = [
                'member_id' => $user_id,
                'keywords' => $keywords,
                'number' => 1
            ];
            $model->data($data);
            $model->save();

        //根据搜索关键词搜索产品
        $productList = model('Product')->getProductListByKeywords($keywords,$sort_type[$sort]);
        $result = [
            'data' => [
                'sort' => $sort,
                'sorts' => $this->sorts,
                'product_list' => $productList
            ]
        ];

        return resultArray($result);
    }

    /**
     * 智搜页面
     */
    public function AIsearch()
    {
        //查询智搜页下的导航图
        $banner = model('Banner')->getBannerList(10)[0];
        //默认搜索词
        $defaultWords = model('SearchKeywords')->getDefaultWords();
        $rand = mt_rand(0,$defaultWords['count']-1);
        $result = [
            'data' => [
                'banner' => $banner,
                'default' => $defaultWords['words'][$rand]
            ]
        ];

        return resultArray($result);
    }
}